from kutana import Plugin
from database import *
from utils import xputils, edict, priviligeshelper, clear_prefix, VKKeyboard
from utils import levels as levelarr

plugin = Plugin(name="–î–∞ —Ç—É—Ç —Ç–∏–ø XPSystem",
                cmds=[{'command': 'rank –±–µ—Å–µ–¥—ã', 'desc': '—É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ —Ç–æ–ø-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –±–µ—Å–µ–¥—ã'},
                      {'command': 'setprefix <–ø—Ä–µ—Ñ–∏–∫—Å>', 'desc': '—É—Å—Ç–∞–Ω–∞–≤–∞–ª–∏–≤–∞–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å –æ—Ç 6 –ª–≤–ª–∞. –í–∏–ø—ã –º–æ–≥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—Ç—è—Ç!'}])

def humanize(value):
    return "{:,}".format(round(value)).replace(",", ".")

@plugin.on_startswith_text("setprefix")
async def on_message(message, attachments, env):
    usera = await get_or_none(PxUser, iduser=str(message.from_id))
    if usera:
        if await priviligeshelper.getUserPriviliges(env, message.from_id) & priviligeshelper.USER_VIP > 0:
            pass
        elif usera.rank < len(levelarr):
            await env.reply(f"–≠—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π –º–æ–≥—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ—Ç {len(levelarr)} —É—Ä–æ–≤–Ω—è.")
            return "DONE"

        if not env['args']:
            await env.reply('–ê –∫–∞–∫–æ–π –ø—Ä–µ—Ñ–∏–∫—Å —Ç–µ–±–µ —Å—Ç–∞–≤–∏—Ç—å?')
            return "DONE"

        prefix = message.text.replace(f"setprefix ", "")
        if len(prefix) >= 40:
            await env.reply("–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å, –º—É—Ä")
            return "DONE"

        cleared_prefix = await clear_prefix(prefix)
        if not cleared_prefix:
            return await env.reply("–í –≤–∞—à–µ–º –ø—Ä–µ—Ñ–∏–∫—Å–µ –Ω–∞–π–¥–µ–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ –¥–æ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞")

        usera.personal = cleared_prefix
        await manager.update(usera)
        await env.eenv.dbredis.set(f"honoka:cached_prefix:{message.from_id}", prefix+", ")
        await env.reply("–ü—Ä–µ—Ñ–∏–∫—Å –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        return "DONE"


@plugin.on_startswith_text("rank –±–µ—Å–µ–¥—ã")
async def on_message(message, attachments, env):
    if not env.eenv.is_multichat or not env.eenv.meta_data:
        await env.reply("–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞–¥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –±–µ—Å–µ–¥–µ –∏ –±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!")
        return "DONE"

    l = []
    for x in env.eenv.meta_data.users:
        l.append(x['id'])
    usersinconf = l

    users15 = await manager.execute(
        PxUser.select().where(PxUser.iduser << usersinconf).order_by(PxUser.xpcount.desc()).limit(15))
    top = 1
    tops = "–¢–æ–ø 15 –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ:\n\n"
    usr = []
    for x in users15:
        usr += [x.iduser]

    users = await env.request('users.get', user_ids=','.join(usr))
    for x in users.response:
        xpcoun = await manager.execute(PxUser.select().where(PxUser.iduser == x['id']))
        tops += f"{str(top)}. [id{x['id']}|{x['first_name']} {x['last_name']}] - {xpcoun[0].xpcount}xp\n"
        top += 1

    await env.reply(tops)
    return "DONE"


@plugin.on_startswith_text("rank —Ö–µ–ª–ø")
async def on_message(message, attachments, env):
    await env.reply(f"–†–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –∫–∞–∫ –≤—Å—ë —É—Å—Ç—Ä–æ–µ–Ω–Ω–æ!\n"
                    f"–°–º–æ—Ç—Ä–∏ –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç—ã –Ω–æ–≤–µ–Ω—å–∫–∏–π –≤–≤–æ–¥–∏—à—å !rank - —Ç–µ–±—è —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç –≤ –±–∞–∑—É –∏ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –∑–≤–∞–Ω–∏–µ –Ω–æ–≤–∏—á–æ–∫\n"
                    f"–ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–Ω–≥–∞\n"
                    f"–†–∞–∑ –≤ –¥–µ—Å—è—Ç—å —Å–µ–∫—É–Ω–¥ –∑–∞ –æ–¥–Ω–æ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –æ—Ç 1-10xp –µ—Å–ª–∏ —Ç—ã –æ–±—ã—á–Ω—ã–π —Å–º–µ—Ä—Ç–Ω—ã–π\n"
                    f"–¢.–∫. —è –æ—á–µ–Ω—å –ª—é–±–ª—é —Ç–µ—Ö –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∞–ª –º–æ–µ–≥–æ –±–æ—Ç–∞\n"
                    f"–í–∏–ø—ã –ø–æ–ª—É—á–∞—é—Ç –æ—Ç 11-25xp –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
                    f"–ù—É, –∞ –∞–¥–º–∏–Ω—ã –≤–æ–æ–±—â–µ —Ö–∏—Ç—Ä–æ–∂–æ–ø—ã–µ - 250xp –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
                    f"\n\n–ü–æ—Å–ª–µ 5 –ª–≤–ª–∞ –≤–∞–º –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å—Å—è !setprefix <prefix>\n"
                    f"–í—ã –ø—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ !setprefix –∏ –∫–∞–∫–æ–π –≤–∞–º –ø—Ä–µ—Ñ–∏–∫—Å –±—É–¥–µ—Ç —É–≥–æ–¥–Ω–æ\n")
    return "DONE"


@plugin.on_startswith_text("rank")
async def on_message(message, attachments, env):
    usera = await get_or_none(PxUser, iduser=str(message.from_id))
    if usera:
        users = await manager.execute(PxUser.select().order_by(PxUser.xpcount.desc()).limit(1000).dicts())
        position = next((index for (index, d) in enumerate(users) if d["iduser"] == usera.iduser), None)
        if position == 0:
            position += 1
        elif position:
            pass
        else:
            position = "1000+"
        # all_users = PxUser.select().order_by(PxUser.xpcount.desc()).dicts()
        #       print(list(all_users.keys()))

        kb = VKKeyboard()
        kb.set_inline(True)
        kb.add_row()
        kb.edit_row(0).add_button("‚ú® –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —ç–∫–æ–Ω–æ–º–∏–∫–∏", payload={'command': f'{env.eenv.prefix}–ø—Ä–æ—Ñ–∏–ª—å'}, color="primary")
        if env.eenv.is_multichat:
            kb.add_row()
            kb.edit_row(1).add_button("üë• –¢–æ–ø –±–µ—Å–µ–¥—ã", payload={'command': f'{env.eenv.prefix}rank –±–µ—Å–µ–¥—ã'}, color="primary")
        
        player_xp = usera.xpcount
        player_lvl = await xputils.getLevel(player_xp)
        next_lvl_reqs = int(await xputils.getRequiredScoreForLevel(player_lvl+1))
        remaining_xp = int(next_lvl_reqs-player_xp)

        if usera.rank != player_lvl:
            usera.rank = player_lvl

        df = f'üë®–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è [id{int(usera.iduser)}|—á–µ—Ä—Ç—è]:\n\n'
        user_privs = await priviligeshelper.getUserPriviliges(env, usera.iduser)
        if user_privs & priviligeshelper.USER_ADMIN > 0:
            df += "‚≠ê| –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ‚ú≥\n"
        elif user_privs & priviligeshelper.USER_MODERATOR > 0:
            df += "‚≠ê| –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä üÖæ\n"
        elif user_privs & priviligeshelper.USER_VIP > 0:
            df += "‚≠ê| –í–∏–ø ‚ìÇ\n"
        else:
            df += "‚≠ê| –Æ–∑–µ—Ä üÜñ\n"
        df += f'üì¢| –£—Ä–æ–≤–µ–Ω—å: {player_lvl}\n'
        if usera.rank > len(levelarr) - 1:
            df += f"üîë| –ü—Ä–µ—Ñ–∏–∫—Å: {usera.personal if usera.personal != '' else '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–≤–æ–π –ø—Ä–µ—Ñ–∏–∫—Å!'}\n"
        else:
            df += f"üîë| –ó–≤–∞–Ω–∏–µ: {levelarr[player_lvl]}\n"

        df += f'‚úâ| –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {humanize(usera.messcount)}\n'
        df += f'‚õè| –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—ã—Ç–∞: {humanize(player_xp)}/{humanize(next_lvl_reqs)}xp (–æ—Å—Ç–∞–ª–æ—Å—å {humanize(remaining_xp)}xp)\n'
        df += f'üíª| –ü–æ–∑–∏—Ü–∏—è –≤ —Ç–æ–ø–µ: #{position}\n'
        await env.reply(df, keyboard=kb.dump_keyboard())
        await manager.update(usera)
        return "DONE"
    else:
        await manager.get_or_create(PxUser, iduser=str(message.from_id), xpcount=0, messcount=0, rank=0, personal="")
        return "DONE"
