from kutana import Plugin
from database import *
import random
from random import random as rd
from utils import ddict, edict, priviligeshelper
from utils.static_text import need_vip
from utils import VKKeyboard
import utils.logs as Logs

plugin = Plugin(name="Economy-Games", cmds=[
                                            {'command': 'double [r|g|b] [—Å—Ç–∞–≤–∫–∞]', 'desc': '–Ω—É —Ç–∏–ø —Ä—É–ª–µ—Ç–∫–∞'},
                                            {'command': '–∫–∞–∑–∏–Ω–æ [—Å—Ç–∞–≤–∫–∞]', 'desc': '—Å—ã–≥—Ä–∞–µ–º?'},
                                            {'command': '–±–∏–Ω [–≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑] [—Å—Ç–∞–≤–∫–∞]', 'desc': '–±–∏–Ω–∞—Ä–Ω—ã–µ –æ–ø—Ü–∏–æ–Ω—ã'},
                                            {'command': '–ª–æ–≤—É—à–∫–∞ [—Å—Ç–∞–≤–∫–∞]', 'desc': '–ø–æ–ø—Ä–æ–±—É–π –¥–æ—Å—Ç–∞—Ç—å —Å–æ–∫—Ä–æ–≤–∏—â–∞!'},
                                            {'command': '—ç–∫–æ –±–æ–Ω—É—Å', 'desc': '–ø–æ–ª—É—á–∏—Ç—Å –±–æ–Ω—É—Å –æ—Ç –±–æ—Ç–∞', 'vip': True},
                                            {'command': '–∏–≥—Ä–∞ [—Å—Ç–∞–≤–∫–∞]', 'desc': '–ø—Ä–æ—Å—Ç–æ –∏–≥—Ä—É–ª—å–∫–∞)'},
                                            {'command': '–¥—Å–Ω—è—Ç—å', 'desc': '—Å–Ω—è—Ç—å –º–∞–Ω–∏, –∑–∞ —Ç–æ —á—Ç–æ –ø–∏—Å–∞–ª!'}])


# 31give
# 32cazino
# 33double
def humanize(value):
    return "{:,}".format(round(value)).replace(",", ".")

async def get_or_create_profile(user_id):
    try:
        shopcenters = shopcenter.select()
        job = jobs.select()
        profiles = Profile.select().where(Profile.user_id == user_id)

        profile = list(await manager.prefetch(profiles, shopcenters, job))[0]
    except IndexError:
        profile = await peewee_async.create_object(Profile, user_id=user_id)
    return profile


temp_data = []

@plugin.on_text("—ç–∫–æ –±–æ–Ω—É—Å")
async def bonus(msg, ats, env):
    if env.eenv.is_multichat:
        return await env.reply("–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –≥—Ä—É–ø–ø—ã")

    if not await priviligeshelper.getUserPriviliges(env, msg.from_id)&priviligeshelper.USER_VIP>0:
        return await env.reply("–¢—ã –Ω–µ –≤–∏–ø!")

    if msg.from_id in temp_data:
        return await env.reply("–í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ —Å–≤–æ–π –±–æ–Ω—É—Å!")

    temp_data.append(msg.from_id)

    profile = await get_or_create_profile(msg.from_id)
    bonus = random.randint(1, 3)
    if bonus == 1:
        money = random.randint(1000, 1_000_000)
        text = f"–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {humanize(money)}$"
        profile.money += Decimal(money)
    if bonus == 2:
        bitcoin = random.randint(1, 25)
        text = f"–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {bitcoin}…É"
        profile.btc += int(bitcoin)
    if bonus == 3:
        shopcenters = list(
            await manager.execute(
                shopcenter.select()
                .where(shopcenter.slot != "other", shopcenter.price < 1_000_000)
                .order_by(shopcenter.price)
            )
        )
        random.shuffle(shopcenters)
        prize = random.choice(shopcenters)
        text = f"–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {prize.name}"
        if prize.slot == "car":
            if profile.car:
                profile.money += prize.price
                text += f"\n–£ –≤–∞—Å –µ—Å—Ç—å —É–∂–µ —ç—Ç–æ –∏–º—É—â–µ—Å—Ç–≤–æ, –Ω–∞ –≤–∞—à —Å—á–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ {humanize(prize.price)}$"
            else:
                profile.car = prize
        elif prize.slot == "airplane":
            if profile.airplane:
                profile.money += prize.price
                text += f"\n–£ –≤–∞—Å –µ—Å—Ç—å —É–∂–µ —ç—Ç–æ –∏–º—É—â–µ—Å—Ç–≤–æ, –Ω–∞ –≤–∞—à —Å—á–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ {humanize(prize.price)}$"
            else:
                profile.airplane = prize
        elif prize.slot == "helicopter":
            if profile.helicopter:
                profile.money += prize.price
                text += f"\n–£ –≤–∞—Å –µ—Å—Ç—å —É–∂–µ —ç—Ç–æ –∏–º—É—â–µ—Å—Ç–≤–æ, –Ω–∞ –≤–∞—à —Å—á–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ {humanize(prize.price)}$"
            else:
                profile.helicopter = prize
        elif prize.slot == "house":
            if profile.house:
                profile.money += prize.price
                text += f"\n–£ –≤–∞—Å –µ—Å—Ç—å —É–∂–µ —ç—Ç–æ –∏–º—É—â–µ—Å—Ç–≤–æ, –Ω–∞ –≤–∞—à —Å—á–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ {humanize(prize.price)}$"
            else:
                profile.house = prize
        elif prize.slot == "apartment":
            if profile.apartment:
                profile.money += prize.price
                text += f"\n–£ –≤–∞—Å –µ—Å—Ç—å —É–∂–µ —ç—Ç–æ –∏–º—É—â–µ—Å—Ç–≤–æ, –Ω–∞ –≤–∞—à —Å—á–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ {humanize(prize.price)}$"
            else:
                profile.apartment = prize
        elif prize.slot == "mobile":
            if profile.mobile:
                profile.money += prize.price
                text += f"\n–£ –≤–∞—Å –µ—Å—Ç—å —É–∂–µ —ç—Ç–æ –∏–º—É—â–µ—Å—Ç–≤–æ, –Ω–∞ –≤–∞—à —Å—á–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ {humanize(prize.price)}$"
            else:
                profile.mobile = prize
        elif prize.slot == "yacht":
            if profile.yacht:
                profile.money += prize.price
                text += f"\n–£ –≤–∞—Å –µ—Å—Ç—å —É–∂–µ —ç—Ç–æ –∏–º—É—â–µ—Å—Ç–≤–æ, –Ω–∞ –≤–∞—à —Å—á–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–æ {humanize(prize.price)}$"
            else:
                profile.yacht = prize
    await manager.update(profile)
    return await env.reply(text)


@plugin.on_startswith_text("double")
async def on_message(message, attachments, env):
    profile = await get_or_create_profile(message.from_id)
    if not env['args'] or len(env['args']) < 2:
        return await env.reply("–í—ã —á—Ç–æ-—Ç–æ –Ω–∞–ø—É—Ç–∞–ª–∏")

    if not env['args'][1].isdigit():
        return await env.reply("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–≤–æ–π")

    color = env['args'][0]
    if not color.lower() in ("r", "g", "b"):
        return await env.reply("–ê—Ä–≥—É–º–µ–Ω—Ç—ã: [r|g|b] [—Å—Ç–∞–≤–∫–∞]")

    balance = profile.money

    rate = int(env['args'][1])
    color = color.lower()

    if rate < 1000:
        return await env.reply("–ú–∏–Ω. —Å—Ç–∞–≤–∫–∞ 1000$")

    if color == "r" and balance < rate * 2 or \
                            color == "b" and balance < rate * 2:
        return await env.reply(
            f"–ü–æ–¥–æ–∂–¥–∏ –ø–æ–¥–æ–∂–¥–∏ –ø–æ–ª–µ–≥—á–µ —É —Ç–µ–±—è –±–∞–ª–∞–Ω—Å–∞ –º–µ–Ω—å—à–µ —á–µ–º –ø—Ä–∏ —É–º–Ω–æ–∂–µ–Ω–∏–∏ {rate} –Ω–∞ 2 = {rate*2}$.")

    if color == "g" and balance < rate * 4:
        return await env.reply(
            f"–ü–æ–¥–æ–∂–¥–∏ –ø–æ–¥–æ–∂–¥–∏ –ø–æ–ª–µ–≥—á–µ —É —Ç–µ–±—è –±–∞–ª–∞–Ω—Å–∞ –º–µ–Ω—å—à–µ —á–µ–º –ø—Ä–∏ —É–º–Ω–æ–∂–µ–Ω–∏–∏ {rate} –Ω–∞ 4 = {rate*4}$.")

    if balance <= 0:
        return await env.reply("–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥!")

    keyboard = VKKeyboard()
    keyboard.set_inline(True)
    keyboard.add_row()
    keyboard.edit_row(0).add_button('–¢–∞–∂–µ —Å—É–º–º–∞ –Ω–∞ üî¥', payload={'command': f'{env.eenv.prefix}double r {rate}'}, color="negative")
    keyboard.add_row()
    keyboard.edit_row(1).add_button('–¢–∞–∂–µ —Å—É–º–º–∞ –Ω–∞ ‚ö´', payload={'command': f'{env.eenv.prefix}double b {rate}'}, color="primary")
    keyboard.add_row()
    keyboard.edit_row(2).add_button('–¢–∞–∂–µ —Å—É–º–º–∞ –Ω–∞ ‚úÖ', payload={'command': f'{env.eenv.prefix}double g {rate}'}, color="positive")

    rInt = random.randint(1, 11)

    if rInt == 1 and color == "r" or \
                            rInt == 3 and color == "r" or \
                            rInt == 5 and color == "r" or \
                            rInt == 7 and color == "r" or \
                            rInt == 10 and color == "r":

        profile.money += rate * 2
        await manager.update(profile)
        return await env.reply(f"üî¥ –ö—Ä–∞—Å–Ω—ã–π!\nüèÜ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {rate*2}$.\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance+rate*2}$.", keyboard=keyboard.dump_keyboard())
    elif rInt == 2 and color == "b" or \
                            rInt == 4 and color == "b" or \
                            rInt == 6 and color == "b" or \
                            rInt == 8 and color == "b" or \
                            rInt == 11 and color == "b":

        profile.money += rate * 2
        await manager.update(profile)
        return await env.reply(f"‚ö´ –ß–µ—Ä–Ω—ã–π!\nüèÜ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {rate*2}$.\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance+rate*2}$.", keyboard=keyboard.dump_keyboard())
    elif rInt == 9 and color == "g":
        profile.money += rate * 4
        await manager.update(profile)
        return await env.reply(f"‚úÖ –ó–µ–ª–µ–Ω—ã–π!\nüèÜ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {rate*4}$.\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance+rate*4}$.", keyboard=keyboard.dump_keyboard())
    else:
        if rInt == 1 or rInt == 3 or rInt == 5 or rInt == 7 or rInt == 10:
            if profile.money - rate * 2 <= 0:
                profile.money = 0
                balance = 0
            else:
                profile.money -= rate * 2
                balance -= rate * 2
            await env.reply(f"üî¥ –ö—Ä–∞—Å–Ω—ã–π!\nüò≠ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {rate*2}$.\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance}$.", keyboard=keyboard.dump_keyboard())
        elif rInt == 2 or rInt == 4 or rInt == 6 or rInt == 8 or rInt == 11:
            if profile.money - rate * 2 <= 0:
                profile.money = 0
                balance = 0
            else:
                profile.money -= rate * 2
                balance -= rate * 2
            await env.reply(f"‚ö´ –ß–µ—Ä–Ω—ã–π!\nüò≠ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {rate*2}$.\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance}$.", keyboard=keyboard.dump_keyboard())
        elif rInt == 9:
            if profile.money - rate * 4 <= 0:
                profile.money = 0
                balance = 0
            else:
                profile.money -= rate * 4
                balance -= rate * 4
            await env.reply(f"‚úÖ –ó–µ–ª–µ–Ω—ã–π!\nüò≠ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {rate*4}$.\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance}$.", keyboard=keyboard.dump_keyboard())

        await manager.update(profile)
        return "DONE"


@plugin.on_startswith_text("–∫–∞–∑–∏–Ω–æ")
async def on_message(message, attachments, env):
    if not env['args'] or not env['args'][0].isdigit():
        return await env.reply("–ß—Ç–æ-—Ç–æ –Ω–∞–ø—É—Ç–∞–ª")

    profile = await get_or_create_profile(message.from_id)
    amount = int(env['args'][0])
    keyboard = VKKeyboard()
    keyboard.lazy_buttons({
        'inline': True,
        'buttons': [
            {'text': '–ö—Ä—É—Ç–∞–Ω—É—Ç—å –µ—â—ë —Ä–∞–∑', 'payload': {'command': f'{env.eenv.prefix}–∫–∞–∑–∏–Ω–æ {amount}' }, 'color': 'primary'}
        ]
    })

    if amount == 777:
        return await env.reply("–¢—ã —Å–ª–∏–ª –±–∞–±–ª–æ, –≤—É—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö–∞—Ö.", attachment="video-99505016_456242816", keyboard=keyboard.dump_keyboard())

    if amount < 100:
        return await env.reply("–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–∞–≤–Ω–∞ —Ö–æ—Ç—è–±—ã 100$")

    if profile.money < int(amount):
        return await env.reply("–°—É–º–º–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –≤–∞—à –±–∞–ª–∞–Ω—Å!")

    r1 = random.randint(0, 2)
    r2 = random.randint(0, 2)
    r3 = random.randint(0, 2)
    emodjis = ["üçå", "üçì", "üçí"]
    if not r1 == r2 == r3:
        profile.money -= int(amount)
        await manager.update(profile)
        await env.reply(f"üêâ –ö–∞–∑–∏–Ω–æ \"–ê–Ω–∞—Ç–æ–ª–∏—á, –∫—Ä—É—Ç–∏ –±–∞—Ä–∞–±–∞–Ω\" üêâ\n"
                        f"üé∞ –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏: {int(amount)} —Ä—É–±.\n\n"
                        f"üé≤ –í–∞—à–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è: {emodjis[r1]} | {emodjis[r2]} | {emodjis[r3]}\n"
                        f"üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: {profile.money} —Ä—É–±.", keyboard=keyboard.dump_keyboard())
    else:
        koef = 0
        if r1 == 0:
            profile.money += int(int(amount) * 1.5)
            koef = 1.5
        elif r1 == 1:
            profile.money += int(int(amount) * 2)
            koef = 2
        elif r1 == 2:
            profile.money += int(int(amount) * 2.5)
            koef = 2.5

        await env.reply(f"üêâ| –ö–∞–∑–∏–Ω–æ \"–ê–Ω–∞—Ç–æ–ª–∏—á, –∫—Ä—É—Ç–∏ –±–∞—Ä–∞–±–∞–Ω\" üêâ\n"
                        f"üé∞| –í—ã –ø–æ–ª—É—á–∏–ª–∏: {int(amount)*koef} —Ä—É–±.\n\n"
                        f"üé≤| –í–∞—à–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è: {emodjis[r1]} | {emodjis[r2]} | {emodjis[r3]}\n"
                        f"üí≥| –í–∞—à –±–∞–ª–∞–Ω—Å: {profile.money} —Ä—É–±.", keyboard=keyboard.dump_keyboard())
        await manager.update(profile)


@plugin.on_startswith_text("—ç–∫–æ –≤—ã–¥–∞—Ç—å")
async def on_message(message, attachments, env):
    if not env['args'] or len(env['args']) < 2 or not env['args'][1].isdigit():
        return await env.reply("–ß—Ç–æ-—Ç–æ –Ω–∞–ø—É—Ç–∞–ª")
    if not await priviligeshelper.getUserPriviliges(env, message.from_id)&priviligeshelper.USER_ADMIN>0:
        return await env.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à—å –∞–¥–º–∏–Ω–∞–º")

    profile = await get_or_create_profile(message.from_id)

    amount = int(env['args'][1])
    if amount>100_000_000_000_000:
        return await env.reply("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ!")

    user_idd = env['args'][0]
    try:
        c, cr = await manager.get_or_create(Profile, id=int(user_idd))
    except:
        return await env.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—è —Å –¥–∞–Ω–Ω—ã–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    await Logs.create_log(env, message.from_id, c.user_id, 2, f"–í—ã–¥–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_idd} —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ {amount}$.")

    c.money += int(amount)
    await manager.update(c)
    return await env.reply("–î–µ–Ω—é–∂–∫–∞ –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞!")


@plugin.on_startswith_text("–±–∏–Ω")
async def on_message(message, attachments, env):
    if not env['args']:
        return await env.reply(f'[–ü–æ–¥—Å–∫–∞–∑–∫–∞] !–±–∏–Ω –≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑ —Å—Ç–∞–≤–∫–∞')

    if len(env['args']) < 2 or not env['args'][1].isdigit():
        return await env.reply(
            f'üî• ‚û£ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å—Ç–∞–≤–∫—É\n [–ü–æ–¥—Å–∫–∞–∑–∫–∞] ‚û£ –±–∏–Ω –≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑ —Å—Ç–∞–≤–∫–∞');

    if len(env['args']) < 1:
        return await env.reply(
            f'üî• ‚û£ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑\n [–ü–æ–¥—Å–∫–∞–∑–∫–∞] ‚û£ –±–∏–Ω –≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑ —Å—Ç–∞–≤–∫–∞');

    amount = int(env['args'][1])

    keyboard = VKKeyboard()
    keyboard.set_inline(True)
    keyboard.add_row()
    keyboard.edit_row(0).add_button('üî∫ –ï—â—ë —Ä–∞–∑ –≤–≤–µ—Ä—Ö', payload={'command': f'{env.eenv.prefix}–±–∏–Ω –≤–≤–µ—Ä—Ö {amount}'}, color="positive")
    keyboard.add_row()
    keyboard.edit_row(1).add_button('üîª –ï—â—ë —Ä–∞–∑ –≤–Ω–∏–∑', payload={'command': f'{env.eenv.prefix}–±–∏–Ω –≤–Ω–∏–∑ {amount}'}, color="negative")

    profile = await get_or_create_profile(message.from_id)
    if amount > profile.money or amount < 1000:
        return await env.reply(
            f'–°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1000 üí∞' if amount < 1000 else f'–°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å –±–∞–ª–∞–Ω—Å')
    if amount > 10000000:
        return await env.reply("–°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 10000000$")

    a = int(rd()*10)
    if env['args'][0].lower() == '–≤–≤–µ—Ä—Ö' and a < 3:
            bin = random.randint(15, 40)
            win = amount*2
            profile.money += win
            await manager.update(profile)
            return await env.reply(f'''
                                    üìä ‚û£ Binary Option
                                    üìà ‚û£ –ö—É—Ä—Å –∞–∫—Ü–∏–∏ –≤—ã—Ä–æ—Å –Ω–∞ ‚Äî {bin} %
                                    üí≥ ‚û£ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: {win}üí∞.
                                    üí∞ ‚û£ –í–∞—à –±–∞–ª–∞–Ω—Å: {profile.money}üí∞''', keyboard=keyboard.dump_keyboard())

    elif env['args'][0].lower() == '–≤–Ω–∏–∑' and a < 3:
        bin = random.randint(15, 40)
        win = amount*2
        profile.money += win
        await manager.update(profile)
        return await env.reply(f'''
                                üìä ‚û£ Binary Option
                                üìâ ‚û£ –ö—É—Ä—Å –∞–∫—Ü–∏–∏ —É–ø–∞–ª –Ω–∞ ‚Äî {bin} %
                                üí≥ ‚û£ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: {win}üí∞.
                                üí∞ ‚û£ –í–∞—à –±–∞–ª–∞–Ω—Å: {profile.money}üí∞''', keyboard=keyboard.dump_keyboard())
    else:
        bin = random.randint(15, 40)
        lose = int(amount)
        profile.money -= lose
        await manager.update(profile)
        return await env.reply(f'''
                                üìä ‚û£ Binary Option
                                üìà ‚û£ –ö—É—Ä—Å –∞–∫—Ü–∏–∏ { "—É–ø–∞–ª" if env['args'][0].lower() == "–≤–≤–µ—Ä—Ö" else "–≤—ã—Ä–æ—Å" } –Ω–∞ ‚Äî {bin} %
                                üí≥ ‚û£ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: {lose}üí∞.
                                üí∞ ‚û£ –í–∞—à –±–∞–ª–∞–Ω—Å: {profile.money}üí∞''', keyboard=keyboard.dump_keyboard())



@plugin.on_startswith_text("–ª–æ–≤—É—à–∫–∞")
async def on_message(message, attachments, env):
    if len(env['args']) < 1 or not env['args'][0].isdigit():
        return await env.reply(f'üòà ‚û£ –£–∫–∞–∂–∏—Ç–µ —Å—Ç–∞–≤–∫—É')

    profile = await get_or_create_profile(message.from_id)
    text = int(env['args'][0])
    if text > profile.money or text <= 0:
        return await env.reply(
            f'–°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0 –∏–ª–∏ —Ä–∞–≤–Ω–∞ 0' if text <= 0 else f'–°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å –±–∞–ª–∞–Ω—Å')

    keyboard = VKKeyboard()
    keyboard.lazy_buttons({
        'inline': True,
        'buttons': [
            {'text': 'üëâ –ï—â—ë —Ä–∞–∑ üëà', 'payload': {'command': f'{env.eenv.prefix}–ª–æ–≤—É—à–∫–∞ {text}'}, 'color': 'positive'}
        ]
    })
    if random.randint(1, 100) > 80:
        win = text * 2
        profile.money += win
        a_some_rare = random.choice(['üí∂', 'üíç', 'üíé', 'üí∞', 'üéÅ', '‚öΩ'])
        await manager.update(profile)
        return await env.reply(
            f'üòà ‚û£ –í—ã –∑–∞—Å—É–Ω—É–ª–∏ —Ä—É–∫—É –≤ –∫–æ—Ä–æ–±–∫—É...\n‚ñ™ ‚û£ –ò–∑ –Ω–µ–µ –≤—ã –¥–æ—Å—Ç–∞–ª–∏ -> [{a_some_rare}] \nüí¥ ‚û£ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏:  {win}üí∞\nüí∞ ‚û£ –ë–∞–ª–∞–Ω—Å: {profile.money}', keyboard=keyboard.dump_keyboard())
    else:
        win = text
        profile.money -= win
        somebad = random.choice(['–ª–æ–≤—É—à–∫–æ–π', '–º—ã—à–µ–ª–æ–≤–∫–æ–π', '–∫–∞–ø–∫–∞–Ω–æ–º'])
        await manager.update(profile)
        return await env.reply(
            f'üëâ ‚û£ –í—ã –∑–∞—Å—É–Ω—É–ª–∏ —Ä—É–∫—É –≤ –∫–æ—Ä–æ–±–∫—É...\nüíÄ ‚û£ –ù–µ—É–¥–∞—á–∞... –í—ã –ø–æ–≤—Ä–µ–¥–∏–ª–∏ —Ä—É–∫—É -> [{somebad}] \nüí¥ ‚û£ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏:  {win}üí∞\nüí∞ ‚û£ –ë–∞–ª–∞–Ω—Å: {profile.money}', keyboard=keyboard.dump_keyboard())

@plugin.on_startswith_text("–∏–≥—Ä–∞")
async def game(message, attachments, env):
    if not env['args'] or not env['args'][0].isdigit():
        return await env.reply("–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å?")

    profile = await get_or_create_profile(message.from_id)
    rate = int(env['args'][0])
    if rate > profile.money:
        return await env.reply("–°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å!")

    if rate < 2000:
        return await env.reply("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 2000$")

    keyboard = VKKeyboard()
    keyboard.lazy_buttons({
        'inline': True,
        'buttons': [
            {'text': 'üëâ –ï—â—ë —Ä–∞–∑ üëà', 'payload': {'command': f'{env.eenv.prefix}–∏–≥—Ä–∞ {rate}'}, 'color': 'positive'}
        ]
    })
    m = random.randint(1, 100)
    if m < 75:
        profile.money-=rate
        await manager.update(profile)
        return await env.reply(f"–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {m}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ —Å–≥–æ—Ä–µ–ª–∞!", keyboard=keyboard.dump_keyboard())

    if m > 75 and m <= 89:
        profile.money+=rate*2
        await manager.update(profile)
        return await env.reply(f"–í—ã–ø–ª–æ —á–∏—Å–ª–æ {m}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ —É–¥–≤–æ–∏–ª–∞—Å—å!", keyboard=keyboard.dump_keyboard())

    if m >= 90 and m <= 99:
        profile.money+=rate*3
        await manager.update(profile)
        return await env.reply(f"–í—ã–ø–ª–æ —á–∏—Å–ª–æ {m}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ —É—Ç—Ä–æ–∏–ª–∞—Å—å!", keyboard=keyboard.dump_keyboard())

    if m == 100:
        profile.money+=rate*5
        await manager.update(profile)
        return await env.reply("–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ 100, –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ, –Ω–æ –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –≤—ã—Ä–∞—Å–ª–∞ –≤ 5 —Ä–∞–∑!", keyboard=keyboard.dump_keyboard())


@plugin.on_startswith_text("–¥—Å–Ω—è—Ç—å")
async def dcheckout(message, attachments, env):
    profile = await get_or_create_profile(message.from_id)
    tempuserstats = await ddict(await env.eenv.dbredis.get(f"honoka:cached_money:{message.from_id}"))

    if not tempuserstats:
        tempuserstats = dict(
            messages=0,
            money=0
        )

    if tempuserstats['money']<=0:
        return await env.reply("–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –≤–∞—à–∏—Ö –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è—Ö —Å —Å–æ–æ–±—â–µ–Ω–∏–π 0$. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–∞–ø–∏—Å–∞—Ç—å –∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.")

    profile.money+=tempuserstats['money']
    await manager.update(profile)
    await env.reply(
        "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!\n"
        f"–í—ã —Å–Ω—è–ª–∏: {tempuserstats['money']}$\n"
        f"–ó–∞ {tempuserstats['messages']} —Å–æ–æ–±—â–µ–Ω–∏–π"
    )
    tempuserstats['messages']=0
    tempuserstats['money']=0
    await env.eenv.dbredis.set(f"honoka:cached_money:{message.from_id}", await edict(tempuserstats))
